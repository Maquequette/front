@import "@/assets/variables";
@import "@/assets/utilities";

.coloredLine {
    display: grid;
    grid-template-rows: min-content 1fr;
    width: 100%;
    height: 150px;

    @each $name,
    $color in $colors {
        &--#{$name}> :after {
            background-color: var(--#{$name});
        }

        &--#{$name}>.container {
            background-color: var(--#{$name});
        }
    }

    &__head,
    &__content {
        position: relative;

        &::after {
            content: '';
            position: absolute;
            @extend .inset-0;
            z-index: -5;
        }
    }

    &__head {

        &::after {
            top: 50%;

            @media (min-width: #{map-get($breakpoints, "l")}) {
                top: calc(50% - 45px/2);
            }
        }

        &__mobile,
        &__desktop {
            width: 100%;
        }

        &__mobile .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            //padding: 2rem 0;

            & .btn__input {
                padding: 1.5rem 0.75rem;
                column-gap: 0.75rem;
            }

            @media (min-width: calc(#{map-get($breakpoints, "l")})) {
                display: none;
            }
        }

        &__desktop {
            display: none;

            &.active {
                display: block;
                position: fixed;
                inset: 0;
                background-color: var(--primary);
                z-index: 80;
                padding-top: 12rem;

                .container {
                    display: block;

                    & .labelContainer:not(:first-child) {
                        padding-top: 2rem;
                    }

                    @for $i from 1 through 8 {
                        @for $j from 1 through 8 {
                            & .gc-#{$i}to#{$j} {
                                z-index: 10-$i;
                            }
                        }
                    }
                }
            }

            @media (min-width: calc(#{map-get($breakpoints, "l")})) {
                display: flex;
                justify-content: center;
                align-items: center;

                & .container {
                    display: grid;
                    grid-template-columns: repeat(7, 1fr);
                    grid-template-rows: repeat(2, max(4.5rem));
                    gap: 0 2rem;

                    @for $i from 1 through 8 {
                        @for $j from 1 through 8 {
                            & .gc-#{$i}to#{$j} {
                                grid-column: #{$i} / #{$j};
                            }
                        }

                        & .gr-#{$i} {
                            grid-row: #{$i} / #{$i+1};
                        }
                    }
                }
            }

            @media (min-width: #{map-get($breakpoints, "l")}) {
                & .labelContainer {
                    padding-left: 0;
                    padding-right: 0;
                    justify-content: flex-end;
                }
            }
        }
    }

    &__content {
        display: flex;
        justify-content: center;
        align-items: center;

        .container {
            width: 100%;
            height: fit-content;
            padding-top: 0;

            @media (min-width: #{map-get($breakpoints, "l")}) {
                padding-top: 0.5rem;
            }
        }


        &__container {

            @media (min-width: #{map-get($breakpoints, "md")}) {
                display: flex;
                justify-content: space-between;
                align-items: center;
                gap: 2rem;

                >.tags {
                    flex: 1;
                }
            }
        }
    }

    &__indications {
        display: flex;
        justify-content: flex-end;
        gap: 1rem;
        padding: 1.5rem 0 0.5rem;
        font-size: var(--font-size-smd);
        font-family: var(--font-family-secondary);

        @media (min-width: #{map-get($breakpoints, "md")}) {
            padding: 0;
        }
    }
}